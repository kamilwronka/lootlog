services:
  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: "rabbitmq-lootlog"
    env_file:
      - ./.env.docker-compose
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitdata:/var/lib/rabbitmq
      - rabbitlog:/var/log/rabbitmq

  postgres:
    image: postgres:17-alpine
    container_name: "postgres-lootlog-auth"
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - ./.env.docker-compose
    ports:
      - "5432:5432"

  meilisearch:
    image: "getmeili/meilisearch:v1.10.0"
    env_file:
      - ./.env.docker-compose
    ports:
      - 7700:7700
    volumes:
      - "meilisearch:/meili_data"
    healthcheck:
      test: set -o pipefail;curl -fsS http://localhost:7700/health | grep -q '{"status":"available"}'
      retries: 3
      timeout: 5s

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    # network_mode: "host"
    command:
      #- "--log.level=DEBUG"
      # - "--api.insecure=true"
      # - "--providers.docker=true"
      # - "--providers.docker.exposedbydefault=false"
      # - "--entryPoints.web.address=:80"
      # - "--configFile=/etc/traefik/traefik_dynamic.yml"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik_dynamic.yml:/etc/traefik/traefik_dynamic.yml:ro"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"

volumes:
  rabbitdata:
  rabbitlog:
  postgres:
  meilisearch:
