http:
  routers:
    auth:
      rule: "PathPrefix(`/api/auth`)"
      service: "auth"
      middlewares:
        - "cors"
        - "apiStripPrefix"
        - "apiCompress"
        
      entryPoints:
        - "web"
    search:
      rule: "PathPrefix(`/api/search`)"
      service: "search"
      middlewares:
        - "cors"
        - "apiStripPrefix"
        - "apiForwardAuth"
        - "apiCompress"
        
      entryPoints:
        - "web"
    preflight:
      rule: "PathPrefix(`/api/lootlog`) && Method(`OPTIONS`)"
      entryPoints:
        - web
      service: noop@internal
      middlewares:
        - cors
    api:
      rule: "PathPrefix(`/api/lootlog`)"
      service: "api"
      middlewares:
        - "apiStripPrefix"
        - "apiForwardAuth"
        - "apiCompress"
        - "cors"
      entryPoints:
        - "web"
    web-client:
      rule: "PathPrefix(`/`)"
      service: "web-client"
      middlewares:
        - "apiCompress"
      entryPoints:
        - "web"
  services:
    web-client:
      loadBalancer:
        servers:
        - url: "http://host.docker.internal:3000"
    auth:
      loadBalancer:
        servers:
        - url: "http://host.docker.internal:4001"
    search:
      loadBalancer:
        servers:
        - url: "http://host.docker.internal:4005"
    api:
      loadBalancer:
        servers:
        - url: "http://host.docker.internal:4003"
  middlewares:
    apiStripPrefix:
      stripPrefix:
        prefixes:
          - "/api/auth"
          - "/api/search"
          - "/api/lootlog"
    apiForwardAuth:
      forwardAuth:
        address: "http://host.docker.internal:4001/verify-auth"
        trustForwardHeader: true
        authResponseHeaders:
          - "X-Auth-User-Id"
          - "X-Auth-Discord-Id"
        authRequestHeaders:
        - "Authorization"
        - "Cookie"
    apiCompress:
      compress:
        includedContentTypes:
          - application/json
          - text/html
          - text/plain
    cors:
      headers:
        accessControlAllowOriginListRegex:
          - '^https:\\/\\/([a-z0-9-]+\\.)?margonem\\.(pl|com)$'
        accessControlAllowMethods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "OPTIONS"
        accessControlAllowHeaders:
          - "Content-Type"
          - "Authorization"
        accessControlMaxAge: 86400